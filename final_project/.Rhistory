mutate(dogs_allowed = ifelse(substr(.$dogs_allowed, 1, 1) == "yes", 1, 0)) %>%
select(c(dogs_allowed, everything()))
housing_data %>%
mutate(dogs_allowed = ifelse(substr(.$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
select(c(dogs_allowed, everything()))
housing_data %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
select(c(dogs_allowed, everything()))
housing_data %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
select(c(dogs_allowed, cats_allowed, everything()))
housing_data %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(pets_allowed = ifelse(housing_data$cats_allowed + housing_data$dogs_allowed > 0, 1, 0)) %>%
select(c( pets_allowed ,dogs_allowed, cats_allowed, everything()))
housing_data %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(pets_allowed = cats_allowed + dogs_allowed) %>%
mutate(pets_allowed = ifelse(housing_data$pets_allowed > 0, 1, 0)) %>%
select(c( pets_allowed ,dogs_allowed, cats_allowed, everything()))
View(housing_data)
housing_data %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(pets_allowed = cats_allowed + dogs_allowed)
housing_data %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0)) %>%
select(c( pets_allowed ,dogs_allowed, cats_allowed, everything()))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}")) %>%
mutate( kitchen_type = factor(kitchen_type)) %>%
mutate( maintenance_cost = as.character(maintenance_cost)) %>%
mutate( common_charges = as.character(common_charges)) %>%
mutate( maintenance_cost = as.numeric(maintenance_cost)) %>%
mutate( common_charges = as.numeric(common_charges)) %>%
mutate( montly_cost = common_charges + maintenance_cost)
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
View(housing_data)
View(housing_data)
select(-c(cats_allowed, dogs_allowed, coop_condo)
housing_data %<>%
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}")) %>%
mutate( kitchen_type = factor(kitchen_type)) %>%
mutate( maintenance_cost = as.character(maintenance_cost)) %>%
mutate( common_charges = as.character(common_charges)) %>%
mutate( maintenance_cost = as.numeric(maintenance_cost)) %>%
mutate( common_charges = as.numeric(common_charges)) %>%
mutate( montly_cost = common_charges + maintenance_cost)
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(cats_allowed, dogs_allowed, coop_condo))
View(housing_data)
housing_data %>%
mutate(dining_room_type = tolower(dining_room_type)) %>%
mutate(dining_room_type = as.numeric(factor(dining_room_type, ordered = FALSE)))
housing_data %>%
mutate(dining_room_type = tolower(dining_room_type))
housing_data
pacman::p_load(nycflights13, tidyverse, magrittr)
pacman::p_load(nycflights13, tidyverse, magrittr)
data(weather)
str(weather)
summary(weather)
weather %<>%
select(-c(time_hour))
weather %<>%
mutate(origin = as.factor(origin))
y = weather$precip
X = weather
X$precip = NULL
rm(weather)
M = tbl_df(apply(is.na(X), 2, as.numeric))
colnames(M) = paste("is_missing_", colnames(X), sep = "")
head(M)
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_dat_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
housing_data = housing_dat_16_17
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
housing_data = housing_dat_16_17
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
setwd("~/Documents/KapelnerMath390/QC_Math_390.4_Spring_2019/final_project")
2017360380
library(readr)
housing_data_16_17 <- read_csv("housing_data _16_17.csv")
View(housing_data_16_17)
load("~/Documents/KapelnerMath390/QC_Math_390.4_Spring_2019/final_project/d project.RData")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_dat_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_dat_16_17.csv")
housing_data = housing_dat_16_17
housing_data = read.csv("housing_data_16_17.csv")
housing_data = housing_dat_16_17
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_16_17.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data = housing_dat_16_17
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data = housing_data_2016_2017
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data = housing_data_2016_2017
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}"))
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(dogs_allowed,cats_allowed))
d = housing_data
D1= d%<>%
mutate(maintenance_cost = sjmisc::rec(maintenance_cost, rec = "NA = 0 ; else = copy")) %<>%
mutate(common_charges = sjmisc::rec(common_charges, rec = "NA = 0 ; else = copy"))##recode from NA to 0.
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}"))
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(dogs_allowed,cats_allowed))
d = housing_data
D1 = d%<>%
mutate(maintenance_cost = sjmisc::rec(maintenance_cost, rec = "NA = 0 ; else = copy")) %<>%
mutate(common_charges = sjmisc::rec(common_charges, rec = "NA = 0 ; else = copy"))##recode from NA to 0.
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, sjmisc)
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, sjmisc, snakecase)
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, sjmisc, snakecase)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data = housing_data_2016_2017
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}"))
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(dogs_allowed,cats_allowed))
d = housing_data
D1= d%<>%
mutate(maintenance_cost = sjmisc::rec(maintenance_cost, rec = "NA = 0 ; else = copy")) %<>%
mutate(common_charges = sjmisc::rec(common_charges, rec = "NA = 0 ; else = copy"))##recode from NA to 0.
# combine maintaince cost and common charges
D1%<>%
mutate( montly_cost = common_charges + maintenance_cost)
## Garage exists conver it to binary
D1= d%<>%
mutate(garage_exists = sjmisc::rec(garage_exists, rec = "NA = 0 ; else = copy")) ##recode from NA to 0.
D1= D1%<>%
mutate(garage_exists = sjmisc::rec(garage_exists, rec = " eys = 1; UG = 1 ; Underground = 1; yes = 1 ; Yes = 1 ; else = copy")) ##recode from NA to 0.
D1 %<>%
select(-c(maintenance_cost , common_charges, model_type , coop_condo))
D2= D1%<>%
mutate( zip_code = as.factor(zip_code))%>%
mutate( dining_room_type = as.factor(dining_room_type)) %>%
mutate( fuel_type = as.factor(fuel_type)) %>%
mutate( garage_exists = as.factor(garage_exists)) %>%
mutate( kitchen_type = as.factor(kitchen_type)) %>%
mutate( parking_charges = as.numeric(parking_charges)) %>%
mutate( listing_price_to_nearest_1000 = as.numeric(listing_price_to_nearest_1000))
str(D1)
y = D2$sale_price
X = D2
X$sale_price = NULL
X$full_address_or_zip_code = NULL
table(housing_data$listing_price_to_nearest_1000)
##Since we have zip code with too many factors we have to splid the data
X %<>%
mutate(zip_code = as.character(zip_code))%<>%
mutate(zip_code = as.numeric(zip_code))
X1 = X %>%
filter(zip_code > 11365)
X2 = X %>%
filter(zip_code < 11366)
##X1
M1 = tbl_df(apply(is.na(X1), 2, as.numeric))
colnames(M1) = paste("is_missing_", colnames(X1), sep = "")
head(M1)
summary(M1)
##X2
M2 = tbl_df(apply(is.na(X2), 2, as.numeric))
colnames(M2) = paste("is_missing_", colnames(X2), sep = "")
head(M2)
summary(M2)
M1 = tbl_df(t(unique(t(M1))))
M2 = tbl_df(t(unique(t(M2))))
M1 %<>% select_if(function(x){sum(x) > 0})
head(M1)
dim(M1)
colSums(M1)
##M2
M1 %<>% select_if(function(x){sum(x) > 0})
head(M1)
dim(M1)
colSums(M1)
pacman::p_load(missForest)
X1imp = missForest(data.frame(X1), sampsize = rep(5, ncol(X1)))$ximp
X2imp = missForest(data.frame(X2), sampsize = rep(18, ncol(X2)))$ximp
XimpTotal <-as.data.frame(rbind(X1imp, X2imp))
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
install.packages("sjmisc")
install.packages("sjmisc")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}"))
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(dogs_allowed,cats_allowed))
d = housing_data
D1= d%<>%
mutate(maintenance_cost = sjmisc::rec(maintenance_cost, rec = "NA = 0 ; else = copy")) %<>%
mutate(common_charges = sjmisc::rec(common_charges, rec = "NA = 0 ; else = copy"))##recode from NA to 0.
# combine maintaince cost and common charges
D1%<>%
mutate( montly_cost = common_charges + maintenance_cost)
## Garage exists conver it to binary
D1= d%<>%
mutate(garage_exists = sjmisc::rec(garage_exists, rec = "NA = 0 ; else = copy")) ##recode from NA to 0.
D1= D1%<>%
mutate(garage_exists = sjmisc::rec(garage_exists, rec = " eys = 1; UG = 1 ; Underground = 1; yes = 1 ; Yes = 1 ; else = copy")) ##recode from NA to 0.
D1 %<>%
select(-c(maintenance_cost , common_charges, model_type , coop_condo))
D2= D1%<>%
mutate( zip_code = as.factor(zip_code))%>%
mutate( dining_room_type = as.factor(dining_room_type)) %>%
mutate( fuel_type = as.factor(fuel_type)) %>%
mutate( garage_exists = as.factor(garage_exists)) %>%
mutate( kitchen_type = as.factor(kitchen_type)) %>%
mutate( parking_charges = as.numeric(parking_charges)) %>%
mutate( listing_price_to_nearest_1000 = as.numeric(listing_price_to_nearest_1000))
str(D1)
y = D2$sale_price
X = D2
X$sale_price = NULL
X$full_address_or_zip_code = NULL
table(housing_data$listing_price_to_nearest_1000)
##Since we have zip code with too many factors we have to splid the data
X %<>%
mutate(zip_code = as.character(zip_code))%<>%
mutate(zip_code = as.numeric(zip_code))
X1 = X %>%
filter(zip_code > 11365)
X2 = X %>%
filter(zip_code < 11366)
##X1
M1 = tbl_df(apply(is.na(X1), 2, as.numeric))
colnames(M1) = paste("is_missing_", colnames(X1), sep = "")
head(M1)
summary(M1)
##X2
M2 = tbl_df(apply(is.na(X2), 2, as.numeric))
colnames(M2) = paste("is_missing_", colnames(X2), sep = "")
head(M2)
summary(M2)
M1 = tbl_df(t(unique(t(M1))))
M2 = tbl_df(t(unique(t(M2))))
M1 %<>% select_if(function(x){sum(x) > 0})
head(M1)
dim(M1)
colSums(M1)
##M2
M1 %<>% select_if(function(x){sum(x) > 0})
head(M1)
dim(M1)
colSums(M1)
pacman::p_load(missForest)
X1imp = missForest(data.frame(X1), sampsize = rep(5, ncol(X1)))$ximp
X2imp = missForest(data.frame(X2), sampsize = rep(18, ncol(X2)))$ximp
XimpTotal <-as.data.frame(rbind(X1imp, X2imp))
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}"))
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(dogs_allowed,cats_allowed))
d = housing_data
D1 = d %<>%
mutate(maintenance_cost = sjmisc::rec(maintenance_cost, rec = "NA = 0 ; else = copy")) %<>%
mutate(common_charges = sjmisc::rec(common_charges, rec = "NA = 0 ; else = copy"))##recode from NA to 0.
# combine maintaince cost and common charges
D1%<>%
mutate( montly_cost = common_charges + maintenance_cost)
## Garage exists conver it to binary
D1= d%<>%
mutate(garage_exists = sjmisc::rec(garage_exists, rec = "NA = 0 ; else = copy")) ##recode from NA to 0.
D1= D1%<>%
mutate(garage_exists = sjmisc::rec(garage_exists, rec = " eys = 1; UG = 1 ; Underground = 1; yes = 1 ; Yes = 1 ; else = copy")) ##recode from NA to 0.
D1 %<>%
select(-c(maintenance_cost , common_charges, model_type , coop_condo))
D2 = D1 %<>%
mutate( zip_code = as.factor(zip_code))%>%
mutate( dining_room_type = as.factor(dining_room_type)) %>%
mutate( fuel_type = as.factor(fuel_type)) %>%
mutate( garage_exists = as.factor(garage_exists)) %>%
mutate( kitchen_type = as.factor(kitchen_type)) %>%
mutate( parking_charges = as.numeric(parking_charges)) %>%
mutate( listing_price_to_nearest_1000 = as.numeric(listing_price_to_nearest_1000))
str(D1)
y = D2$sale_price
X = D2
X$sale_price = NULL
X$full_address_or_zip_code = NULL
table(housing_data$listing_price_to_nearest_1000)
##Since we have zip code with too many factors we have to splid the data
X %<>%
mutate(zip_code = as.character(zip_code))%<>%
mutate(zip_code = as.numeric(zip_code))
X1 = X %>%
filter(zip_code > 11365)
X2 = X %>%
filter(zip_code < 11366)
##X1
M1 = tbl_df(apply(is.na(X1), 2, as.numeric))
colnames(M1) = paste("is_missing_", colnames(X1), sep = "")
head(M1)
summary(M1)
##X2
M2 = tbl_df(apply(is.na(X2), 2, as.numeric))
colnames(M2) = paste("is_missing_", colnames(X2), sep = "")
head(M2)
summary(M2)
M1 = tbl_df(t(unique(t(M1))))
M2 = tbl_df(t(unique(t(M2))))
M1 %<>% select_if(function(x){sum(x) > 0})
head(M1)
dim(M1)
colSums(M1)
##M2
M1 %<>% select_if(function(x){sum(x) > 0})
head(M1)
dim(M1)
colSums(M1)
pacman::p_load(missForest)
X1imp = missForest(data.frame(X1), sampsize = rep(5, ncol(X1)))$ximp
X2imp = missForest(data.frame(X2), sampsize = rep(18, ncol(X2)))$ximp
XimpTotal <-as.data.frame(rbind(X1imp, X2imp))
D2 %>%
select(zip_code)
table(zip_code)
table(D2$zip_code)
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
housing_data %<>%
select(-c(HITId, HITTypeId, Title, Description, Keywords, Reward, CreationTime, MaxAssignments,	RequesterAnnotation,	AssignmentDurationInSeconds,	AutoApprovalDelayInSeconds,	Expiration,	NumberOfSimilarHITs, LifetimeInSeconds,	AssignmentId,	WorkerId,	AssignmentStatus,	AcceptTime,	SubmitTime,	AutoApprovalTime,	ApprovalTime,	RejectionTime,	RequesterFeedback,	WorkTimeInSeconds, LifetimeApprovalRate,	Last30DaysApprovalRate,	Last7DaysApprovalRate, URL, url, date_of_sale))
housing_data %<>%
mutate( zip_code = str_extract(full_address_or_zip_code, "[0-9]{5}"))
housing_data %<>%
mutate(co_op = ifelse(substr(housing_data$coop_condo, 1, 5) == "co-op", 1, 0)) %>%
mutate(condo = ifelse(substr(housing_data$coop_condo, 1, 5) == "condo", 1, 0)) %>%
mutate(dogs_allowed = ifelse(substr(housing_data$dogs_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(housing_data$cats_allowed, 1, 3) == "yes", 1, 0)) %>%
mutate( pets_allowed = ifelse( cats_allowed + dogs_allowed > 0, 1, 0))
housing_data %<>%
select(-c(dogs_allowed,cats_allowed))
d = housing_data
D1 = d %<>%
mutate(maintenance_cost = sjmisc::rec(maintenance_cost, rec = "NA = 0 ; else = copy")) %<>%
mutate(common_charges = sjmisc::rec(common_charges, rec = "NA = 0 ; else = copy"))##recode from NA to 0.
# combine maintaince cost and common charges
D1%<>%
mutate( montly_cost = common_charges + maintenance_cost)
#fix feature selection
q_housing = as.data.frame(housing_data)
q_housing %<>%
select(num_bedrooms, num_floors_in_building, kitchen_type, maintenance_cost, num_full_bathrooms, num_total_rooms, sq_footage, walk_score, dining_room_type, fuel_type, cats_allowed, dogs_allowed, coop_condo, approx_year_built, garage_exists, sale_price) %>%
mutate(kitchen_type = tolower(kitchen_type)) %>%
mutate(kitchen_type = as.numeric(factor(kitchen_type, ordered = FALSE))) %>%
mutate(dining_room_type = tolower(dining_room_type)) %>%
mutate(dining_room_type = as.numeric(factor(dining_room_type, ordered = FALSE))) %>%
mutate(fuel_type = tolower(fuel_type)) %>%
mutate(fuel_type = as.numeric(factor(fuel_type, ordered = FALSE))) %>%
mutate(maintenance_cost = as.numeric(factor(maintenance_cost, ordered = FALSE))) %>%
mutate(dogs_allowed = ifelse(substr(.$dogs_allowed, 1, 1) == "y", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(.$cats_allowed, 1, 1) == "y", 1, 0)) %>%
mutate(sale_price =  as.numeric(gsub('[$,]', '', q_housing$sale_price))) %>%
mutate(coop_condo = factor(tolower(coop_condo))) %>%
mutate(coop_condo = ifelse(substr(.$coop_condo, 1, 5) == "co-op", 0, 1)) %>%
mutate(garage_exists = ifelse(is.na(garage_exists), 0, 1)) #%>%
pacman::p_load(dplyr, tidyr, ggplot2, magrittr, stringr, mlr, tidyverse, ggmap)
housing_data = read.csv("housing_data_2016_2017.csv")
housing_data_2016_2017 = housing_data
#fix feature selection
q_housing = as.data.frame(housing_data)
q_housing %<>%
select(num_bedrooms, num_floors_in_building, kitchen_type, maintenance_cost, num_full_bathrooms, num_total_rooms, sq_footage, walk_score, dining_room_type, fuel_type, cats_allowed, dogs_allowed, coop_condo, approx_year_built, garage_exists, sale_price) %>%
mutate(kitchen_type = tolower(kitchen_type)) %>%
mutate(kitchen_type = as.numeric(factor(kitchen_type, ordered = FALSE))) %>%
mutate(dining_room_type = tolower(dining_room_type)) %>%
mutate(dining_room_type = as.numeric(factor(dining_room_type, ordered = FALSE))) %>%
mutate(fuel_type = tolower(fuel_type)) %>%
mutate(fuel_type = as.numeric(factor(fuel_type, ordered = FALSE))) %>%
mutate(maintenance_cost = as.numeric(factor(maintenance_cost, ordered = FALSE))) %>%
mutate(dogs_allowed = ifelse(substr(.$dogs_allowed, 1, 1) == "y", 1, 0)) %>%
mutate(cats_allowed = ifelse(substr(.$cats_allowed, 1, 1) == "y", 1, 0)) %>%
mutate(sale_price =  as.numeric(gsub('[$,]', '', q_housing$sale_price))) %>%
mutate(coop_condo = factor(tolower(coop_condo))) %>%
mutate(coop_condo = ifelse(substr(.$coop_condo, 1, 5) == "co-op", 0, 1)) %>%
mutate(garage_exists = ifelse(is.na(garage_exists), 0, 1)) #%>%
#ID col for selecting missing y's
#mutate(id = 1:nrow(q_housing))
#identifying missing y's
# naEntries = q_housing %>%
#               filter(is.na(sale_price))
# modellingEntries = setdiff(q_housing, naEntries)
missingTable = tbl_df(apply(is.na(q_housing), 2, as.numeric))
colnames(missingTable) = paste("is_missing_", colnames(q_housing), sep = "")
missingTable = tbl_df(t(unique(t(missingTable))))
missingTable %<>%
select_if(function(x){sum(x) > 0})
imp_q_housing = missForest(q_housing, sampsize = rep(520, ncol(q_housing)))$ximp
str(imp_q_housing)
